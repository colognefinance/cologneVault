package contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class MedleyDAO extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161310b38038061310b833981810160405260a081101561003357600080fd5b508051602082015160408301516060840151608090940151600280546001600160a01b03199081166001600160a01b03968716179091556003805482169486169490941790935560048054841692851692909217909155600580548316948416949094179093556006805490911691909216179055613054806100b76000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c698a1da1161005b578063c698a1da14610136578063c8593d121461013e578063cd26be1c14610146578063f97c6e111461014e5761007d565b806350cc258e1461008257806350d23c70146100da57806377701eb01461012e575b600080fd5b61008a61017c565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100c65781810151838201526020016100ae565b505050509050019250505060405180910390f35b610112600480360360808110156100f057600080fd5b506001600160a01b0381351690602081013590604081013590606001356101de565b604080516001600160a01b039092168252519081900360200190f35b61011261047a565b610112610489565b610112610498565b6101126104a7565b61017a6004803603604081101561016457600080fd5b506001600160a01b0381351690602001356104b6565b005b606060008054806020026020016040519081016040528092919081815260200182805480156101d457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b6575b5050505050905090565b6000803385878686600660009054906101000a90046001600160a01b03166040516102089061058b565b6001600160a01b039687168152602081019590955292851660408086019190915260608501929092526080840152921660a082015290519081900360c001906000f08015801561025c573d6000803e3d6000fd5b50604080516323b872dd60e01b81523360048201526001600160a01b0380841660248301526044820188905291519293508892918316916323b872dd916064808201926020929091908290030181600087803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50516103225760405162461bcd60e51b815260040180806020018281038252602e815260200180612ff1602e913960400191505060405180910390fd5b600254604080516323b872dd60e01b81523360048201526001600160a01b038581166024830152604482018a9052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506040513d60208110156103a857600080fd5b50516103e55760405162461bcd60e51b815260040180806020018281038252602e815260200180612fc3602e913960400191505060405180910390fd5b60008054600180820183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b0319166001600160a01b03861690811790915580835260208290526040808420805460ff1916909317909255905133927f9990404fa50cbe447253514fc4ab52bb578ae0b3514a50714660a1e801a2f6d391a35095945050505050565b6003546001600160a01b031690565b6004546001600160a01b031690565b6002546001600160a01b031690565b6005546001600160a01b031690565b3360009081526001602052604090205460ff1661051a576040805162461bcd60e51b815260206004820152601760248201527f4f6e6c79207661756c742063616e206d696e7420454155000000000000000000604482015290519081900360640190fd5b600354604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f1991604480830192600092919082900301818387803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b505050505050565b612a2a806105998339019056fe6080604052600060078190556009819055600a819055600c819055600e55600f805460ff60a01b191690553480156200003757600080fd5b5060405162002a2a38038062002a2a833981810160405260c08110156200005d57600080fd5b50805160208201516040808401516060850151608086015160a090960151600080546001600160a01b0319166001600160a01b038089169190911780835595519798969794969395939492938993911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319163317908190556040805163077701eb60e41b815290516001600160a01b0392909216916377701eb091600480820192602092909190829003018186803b1580156200012d57600080fd5b505afa15801562000142573d6000803e3d6000fd5b505050506040513d60208110156200015957600080fd5b5051600380546001600160a01b0319166001600160a01b039283161790556002546040805163642c9e8960e11b81529051919092169163c8593d12916004808301926020929190829003018186803b158015620001b557600080fd5b505afa158015620001ca573d6000803e3d6000fd5b505050506040513d6020811015620001e157600080fd5b5051600480546001600160a01b03199081166001600160a01b0393841617825560058054821688851617905560068690556007859055600d8054909116848416179081905560408051632abf68dd60e11b81529051919093169263557ed1ba9281810192602092909190829003018186803b1580156200026057600080fd5b505afa15801562000275573d6000803e3d6000fd5b505050506040513d60208110156200028c57600080fd5b5051600b556200029c85620002a8565b505050505050620002b3565b600880549091019055565b61276780620002c36000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a69bdf1611610071578063a69bdf161461021b578063c5ebeaec14610223578063f2fde38b14610240578063f7376f0c14610266578063f78be85a1461026e57610116565b80638da5cb5b146101df5780638f32d59b1461020357806398d5fdca1461020b5780639b434cf11461021357610116565b806334ce998a116100e957806334ce998a1461016657806343d726d614610180578063486501c51461018857806359a87bc1146101a5578063715018a6146101d757610116565b80631865c57d1461011b57806321adeed614610125578063243582ff146101415780632da25de31461015e575b600080fd5b610123610276565b005b61012d610278565b604080519115158252519081900360200190f35b6101236004803603602081101561015757600080fd5b503561035c565b610123610686565b61016e6106d7565b60408051918252519081900360200190f35b610123610771565b61016e6004803603602081101561019e57600080fd5b5035610b3b565b610123600480360360608110156101bb57600080fd5b50803590602081013590604001356001600160a01b0316610bb2565b6101236112a8565b6101e7611303565b604080516001600160a01b039092168252519081900360200190f35b61012d611312565b61016e611323565b61012361132d565b61016e611491565b6101236004803603602081101561023957600080fd5b50356114ec565b6101236004803603602081101561025657600080fd5b50356001600160a01b03166116b1565b61016e6116cb565b61016e611835565b565b600f54600090600160a01b900460ff16156102cc576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b600d5460408051632abf68dd60e11b81529051610343926001600160a01b03169163557ed1ba916004808301926020929190829003018186803b15801561031257600080fd5b505afa158015610326573d6000803e3d6000fd5b505050506040513d602081101561033c57600080fd5b5051610b3b565b158015906103565750610354611835565b155b90505b90565b600f54600160a01b900460ff16156103ad576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b505050506040513d602081101561043157600080fd5b5051610484576040805162461bcd60e51b815260206004820152601b60248201527f5661756c743a2063616e6e6f74207472616e73666572204541552e0000000000604482015290519081900360640190fd5b610509600182600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d602081101561050257600080fd5b5051611923565b600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055757600080fd5b505afa15801561056b573d6000803e3d6000fd5b505050506040513d602081101561058157600080fd5b5051600b55600061059182611928565b905060006009548211156105b3575060098054600090915590819003906105bf565b50600980548290039055805b60035460408051630852cd8d60e31b81526004810184905290516001600160a01b03909216916342966c689160248082019260009290919082900301818387803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506106466004610640600754600654611ae690919063ffffffff16565b90611b48565b600a5460095461065591611b8a565b11610665576000600c819055600e555b600061066f611323565b905080600754146106805760078190555b50505050565b600f54600160a01b900460ff1615610276576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b600f54600090600160a01b900460ff161561072b576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b600d5460408051632abf68dd60e11b81529051610356926001600160a01b03169163557ed1ba916004808301926020929190829003018186803b15801561031257600080fd5b610779611312565b61078257600080fd5b600d5460408051632abf68dd60e11b815290516107c8926001600160a01b03169163557ed1ba916004808301926020929190829003018186803b15801561031257600080fd5b156108045760405162461bcd60e51b81526004018080602001828103825260368152602001806125c86036913960400191505060405180910390fd5b6005546001600160a01b031663a9059cbb61081d611303565b600554604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561086857600080fd5b505afa15801561087c573d6000803e3d6000fd5b505050506040513d602081101561089257600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d602081101561090d57600080fd5b50506004546001600160a01b031663a9059cbb610928611303565b60048054604080516370a0823160e01b81523093810193909352516001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d602081101561099e57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156109ef57600080fd5b505af1158015610a03573d6000803e3d6000fd5b505050506040513d6020811015610a1957600080fd5b50506003546001600160a01b031663a9059cbb610a34611303565b600354604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610a7f57600080fd5b505afa158015610a93573d6000803e3d6000fd5b505050506040513d6020811015610aa957600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610afa57600080fd5b505af1158015610b0e573d6000803e3d6000fd5b505050506040513d6020811015610b2457600080fd5b5050600f805460ff60a01b1916600160a01b179055565b600f54600090600160a01b900460ff1615610b8f576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b6000610b9a83611be4565b50600954909150610bab9082611b8a565b9392505050565b600f54600160a01b900460ff1615610c03576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610c4e57600080fd5b505afa158015610c62573d6000803e3d6000fd5b505050506040513d6020811015610c7857600080fd5b5051831115610cb85760405162461bcd60e51b815260040180806020018281038252602781526020018061270b6027913960400191505060405180910390fd5b6000610cc2611323565b905060008111610d035760405162461bcd60e51b815260040180806020018281038252602f815260200180612516602f913960400191505060405180910390fd5b82811115610d58576040805162461bcd60e51b815260206004820152601b60248201527f5661756c743a3a62757928293a20507269636520746f6f206c6f770000000000604482015290519081900360640190fd5b6000610d648583611ae6565b9050600e54600014611176576000610d7d82600a611b48565b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290519293506001600160a01b03909116916323b872dd916064808201926020929091908290030181600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b505050506040513d6020811015610e0457600080fd5b5051610e415760405162461bcd60e51b81526004018080602001828103825260288152602001806125456028913960400191505060405180910390fd5b60035460025460408051633349af8760e21b815290516001600160a01b039384169363095ea7b393169163cd26be1c916004808301926020929190829003018186803b158015610e9057600080fd5b505afa158015610ea4573d6000803e3d6000fd5b505050506040513d6020811015610eba57600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482018590525160448083019260209291908290030181600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050506040513d6020811015610f3457600080fd5b5060009050610f4282611cfb565b90506000610f566064610640846021611ae6565b60048054600f546040805163a9059cbb60e01b81526001600160a01b03928316948101949094526024840185905251939450169163a9059cbb916044808201926020929091908290030181600087803b158015610fb257600080fd5b505af1158015610fc6573d6000803e3d6000fd5b505050506040513d6020811015610fdc57600080fd5b50516110195760405162461bcd60e51b815260040180806020018281038252602d815260200180612681602d913960400191505060405180910390fd5b600061102b6064610640856021611ae6565b600480546040805163a9059cbb60e01b8152339381019390935260248301849052519293506001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b505050506040513d60208110156110ac57600080fd5b50516110e95760405162461bcd60e51b815260040180806020018281038252602a8152602001806126ae602a913960400191505060405180910390fd5b6004546001600160a01b03166342966c6861110e8361110887876121b2565b906121b2565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561114457600080fd5b505af1158015611158573d6000803e3d6000fd5b5050505061116f84866121b290919063ffffffff16565b9450505050505b61117f8161035c565b6005546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018990529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156111d557600080fd5b505af11580156111e9573d6000803e3d6000fd5b505050506040513d60208110156111ff57600080fd5b5051611252576040805162461bcd60e51b815260206004820181905260248201527f5661756c743a3a6275793a2063616e6e6f74207472616e73666572204541552e604482015290519081900360640190fd5b81600754146112615760078290555b6040805186815290516001600160a01b0385169184917f9d995b79e708615dc7201d66ebdcb94d773fe76aac960305383a8b4f8dda9f059181900360200190a35050505050565b6112b0611312565b6112b957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60006103566121f4565b600f54600160a01b900460ff161561137e576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b611386610278565b6113c15760405162461bcd60e51b81526004018080602001828103825260438152602001806124d36043913960600191505060405180910390fd5b600e54156114005760405162461bcd60e51b815260040180806020018281038252603f815260200180612642603f913960400191505060405180910390fd5b600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561144e57600080fd5b505afa158015611462573d6000803e3d6000fd5b505050506040513d602081101561147857600080fd5b5051600e55600f80546001600160a01b03191633179055565b600f54600090600160a01b900460ff16156114e5576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b5060095490565b600f54600160a01b900460ff161561153d576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b611545611312565b61154e57600080fd5b611556611835565b8111156115aa576040805162461bcd60e51b815260206004820152601a60248201527f437265646974206c696d69742069732065786861757374656420000000000000604482015290519081900360640190fd5b6002546001600160a01b031663f97c6e116115c3611303565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561160a57600080fd5b505af115801561161e573d6000803e3d6000fd5b505060098054840190555050600d5460408051632abf68dd60e11b815290516001600160a01b039092169163557ed1ba91600480820192602092909190829003018186803b15801561166f57600080fd5b505afa158015611683573d6000803e3d6000fd5b505050506040513d602081101561169957600080fd5b5051600b8190556116ae906002908390611923565b50565b6116b9611312565b6116c257600080fd5b6116ae81612368565b6002546040805163634c50ed60e11b815290516000926001600160a01b03169163c698a1da916004808301926020929190829003018186803b15801561171057600080fd5b505afa158015611724573d6000803e3d6000fd5b505050506040513d602081101561173a57600080fd5b50516002546040805163642c9e8960e11b815290516001600160a01b0393841693633ddac95393169163c8593d12916004808301926020929190829003018186803b15801561178857600080fd5b505afa15801561179c573d6000803e3d6000fd5b505050506040513d60208110156117b257600080fd5b5051600854604080516001600160e01b031960e086901b1681526001600160a01b0390931660048401526024830191909152516044808301926020929190829003018186803b15801561180457600080fd5b505afa158015611818573d6000803e3d6000fd5b505050506040513d602081101561182e57600080fd5b5051905090565b600f54600090600160a01b900460ff1615611889576040805162461bcd60e51b815260206004820152600f60248201526e15985d5b1d081a5cc818db1bdcd959608a1b604482015290519081900360640190fd5b60006118dc600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031257600080fd5b905060006118fc6004610640600754600654611ae690919063ffffffff16565b905081811161191057600092505050610359565b61191a81836121b2565b92505050610359565b505050565b60008060006119af600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561197e57600080fd5b505afa158015611992573d6000803e3d6000fd5b505050506040513d60208110156119a857600080fd5b5051611be4565b600c81905585945090925090506000828411156119d757506000600a559181900391816119e2565b50828203600a556000925b60006119ef826002611b48565b905060006119fc82611cfb565b6004805460408051630852cd8d60e31b8152928301849052519293506001600160a01b0316916342966c689160248082019260009290919082900301818387803b158015611a4957600080fd5b505af1158015611a5d573d6000803e3d6000fd5b5050600354604080516391c05b0b60e01b8152868803600482015290516001600160a01b0390921693506391c05b0b92506024808201926020929091908290030181600087803b158015611ab057600080fd5b505af1158015611ac4573d6000803e3d6000fd5b505050506040513d6020811015611ada57600080fd5b50505050505050919050565b600082611af557506000611b42565b82820282848281611b0257fe5b0414611b3f5760405162461bcd60e51b81526004018080602001828103825260218152602001806125a76021913960400191505060405180910390fd5b90505b92915050565b6000611b3f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506123d6565b600082820183811015611b3f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080600b54831015611c3e576040805162461bcd60e51b815260206004820181905260248201527f43616e6e6f742063616c63756c6174652066656520696e207468652070617374604482015290519081900360640190fd5b600e54839015801590611c52575083600e54105b15611c5c5750600e545b620151806000611c71620186a061016d611b48565b9050600c549350600a5494506000600b5490505b83811015611cf2576000611cab6004610640600754600654611ae690919063ffffffff16565b905080611cc388600954611b8a90919063ffffffff16565b1115611cd25785611cd2578195505b620f42408388600954010281611ce457fe5b049690960195508201611c85565b50505050915091565b6040805160028082526060808301845260009390929190602083019080368337505060035482519293506001600160a01b031691839150600090611d3b57fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110611d6657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000611e92600a6106406009600260009054906101000a90046001600160a01b03166001600160a01b031663c698a1da6040518163ffffffff1660e01b815260040160206040518083038186803b158015611de057600080fd5b505afa158015611df4573d6000803e3d6000fd5b505050506040513d6020811015611e0a57600080fd5b505160035460408051633ddac95360e01b81526001600160a01b039283166004820152602481018c905290519190921691633ddac953916044808301926020929190829003018186803b158015611e6057600080fd5b505afa158015611e74573d6000803e3d6000fd5b505050506040513d6020811015611e8a57600080fd5b505190611ae6565b90506000600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee457600080fd5b505afa158015611ef8573d6000803e3d6000fd5b505050506040513d6020811015611f0e57600080fd5b505160025460408051633349af8760e21b8152905161271090930193506060926001600160a01b039092169163cd26be1c91600480820192602092909190829003018186803b158015611f6057600080fd5b505afa158015611f74573d6000803e3d6000fd5b505050506040513d6020811015611f8a57600080fd5b50516040516338ed173960e01b8152600481018881526024820186905230606483018190526084830186905260a060448401908152885160a485015288516001600160a01b03909516946338ed1739948c948a948c9490938b9360c401906020878101910280838360005b8381101561200d578181015183820152602001611ff5565b505050509050019650505050505050600060405180830381600087803b15801561203657600080fd5b505af115801561204a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561207357600080fd5b810190808051604051939291908464010000000082111561209357600080fd5b9083019060208201858111156120a857600080fd5b82518660208202830111640100000000821117156120c557600080fd5b82525081516020918201928201910280838360005b838110156120f25781810151838201526020016120da565b5050505090500160405250505090508060018151811061210e57fe5b602002602001015194508060008151811061212557fe5b6020026020010151861461216a5760405162461bcd60e51b815260040180806020018281038252603a81526020018061256d603a913960400191505060405180910390fd5b848311156121a95760405162461bcd60e51b81526004018080602001828103825260338152602001806126d86033913960400191505060405180910390fd5b50505050919050565b6000611b3f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612478565b600754600e54610708901561236457600e54600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561225457600080fd5b505afa158015612268573d6000803e3d6000fd5b505050506040513d602081101561227e57600080fd5b505110156122bd5760405162461bcd60e51b81526004018080602001828103825260448152602001806125fe6044913960600191505060405180910390fd5b600061234982610640600e54600d60009054906101000a90046001600160a01b03166001600160a01b031663557ed1ba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561231757600080fd5b505afa15801561232b573d6000803e3d6000fd5b505050506040513d602081101561234157600080fd5b5051906121b2565b606590069050612360606461064085848303611ae6565b9250505b5090565b6001600160a01b03811661237b57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081836124625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561242757818101518382015260200161240f565b50505050905090810190601f1680156124545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161246e57fe5b0495945050505050565b600081848411156124ca5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561242757818101518382015260200161240f565b50505090039056fe5661756c743a3a7374617274496e697469616c4c697175696469747941756374696f6e28293a20637265646974206c696d6974206973206e6f742062726561636865645661756c743a3a62757928293a20496e697469616c204c69717569646974792041756374696f6e206973206f7665725661756c743a3a6275793a2063616e6e6f74207472616e73666572204541552070656e616c74792e5661756c743a3a6275794d444c5928293a206e6f7420657861637420616d6f756e74206f662045415520736f6c6420746f20627579204d444c59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775661756c743a3a636c6f736528293a20636c6f736520616c6c6f776564206f6e6c7920696620646562742069732070616964206f66665661756c743a3a676574507269636528293a20496e636f72726563742073746174653a204c696d697420697320627265616368656420696e2074686520667574757265215661756c743a3a7374617274496e697469616c4c697175696469747941756374696f6e28293a20636c6f73652d6f757420616c72656164792063616c6c65645661756c743a3a6275793a207472616e73666572204d444c5920626f756e747920746f20696e69746961746f725661756c743a3a6275793a207472616e73666572204d444c5920626f756e747920746f206269646465725661756c743a3a6275794d444c5928293a204d444c5920626f75676874206973206c657373207468616e2065787065637465645661756c743a3a62757928293a204e6f7420656e6f75676820746f6b656e7320746f2073656c6ca2646970667358221220028f4759d28da0b448f69e87746aaa528f3fba5f6db4cb8f0523f736473d0ecf64736f6c634300070000334d65646c657944414f3a205472616e73666572206f66204d444c5920746f6b656e73206e6f7420616c6c6f7765644d65646c657944414f3a205472616e73666572206f66207573657220746f6b656e73206e6f7420616c6c6f776564a2646970667358221220d77a74767c4c35ceeb486d89ab5a7fe7ab17c2a362df1869cc1a2345eed6112264736f6c63430007000033";

    public static final String FUNC_CREATEVAULT = "createVault";

    public static final String FUNC_GETEAUTOKENADDRESS = "getEauTokenAddress";

    public static final String FUNC_GETMDLYMARKET = "getMdlyMarket";

    public static final String FUNC_GETMDLYPRICEORACLE = "getMdlyPriceOracle";

    public static final String FUNC_GETMDLYTOKENADDRESS = "getMdlyTokenAddress";

    public static final String FUNC_LISTVAULTS = "listVaults";

    public static final String FUNC_MINTEAU = "mintEAU";

    public static final Event VAULTCREATION_EVENT = new Event("VaultCreation", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected MedleyDAO(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MedleyDAO(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected MedleyDAO(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected MedleyDAO(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<VaultCreationEventResponse> getVaultCreationEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VAULTCREATION_EVENT, transactionReceipt);
        ArrayList<VaultCreationEventResponse> responses = new ArrayList<VaultCreationEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VaultCreationEventResponse typedResponse = new VaultCreationEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.vault = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VaultCreationEventResponse> vaultCreationEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, VaultCreationEventResponse>() {
            @Override
            public VaultCreationEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VAULTCREATION_EVENT, log);
                VaultCreationEventResponse typedResponse = new VaultCreationEventResponse();
                typedResponse.log = log;
                typedResponse.vault = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.owner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VaultCreationEventResponse> vaultCreationEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VAULTCREATION_EVENT));
        return vaultCreationEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createVault(String token, BigInteger stake, BigInteger initialAmount, BigInteger tokenPrice) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEVAULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, token), 
                new org.web3j.abi.datatypes.generated.Uint256(stake), 
                new org.web3j.abi.datatypes.generated.Uint256(initialAmount), 
                new org.web3j.abi.datatypes.generated.Uint256(tokenPrice)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getEauTokenAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETEAUTOKENADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getMdlyMarket() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMDLYMARKET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getMdlyPriceOracle() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMDLYPRICEORACLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getMdlyTokenAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMDLYTOKENADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> listVaults() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LISTVAULTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> mintEAU(String beneficiary, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_MINTEAU, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, beneficiary), 
                new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static MedleyDAO load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MedleyDAO(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static MedleyDAO load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MedleyDAO(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static MedleyDAO load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new MedleyDAO(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static MedleyDAO load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new MedleyDAO(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<MedleyDAO> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String mdlyToken, String eauToken, String mdlyPriceOracle, String mdlyMarket, String timeProvider) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, mdlyToken), 
                new org.web3j.abi.datatypes.Address(160, eauToken), 
                new org.web3j.abi.datatypes.Address(160, mdlyPriceOracle), 
                new org.web3j.abi.datatypes.Address(160, mdlyMarket), 
                new org.web3j.abi.datatypes.Address(160, timeProvider)));
        return deployRemoteCall(MedleyDAO.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<MedleyDAO> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String mdlyToken, String eauToken, String mdlyPriceOracle, String mdlyMarket, String timeProvider) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, mdlyToken), 
                new org.web3j.abi.datatypes.Address(160, eauToken), 
                new org.web3j.abi.datatypes.Address(160, mdlyPriceOracle), 
                new org.web3j.abi.datatypes.Address(160, mdlyMarket), 
                new org.web3j.abi.datatypes.Address(160, timeProvider)));
        return deployRemoteCall(MedleyDAO.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MedleyDAO> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String mdlyToken, String eauToken, String mdlyPriceOracle, String mdlyMarket, String timeProvider) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, mdlyToken), 
                new org.web3j.abi.datatypes.Address(160, eauToken), 
                new org.web3j.abi.datatypes.Address(160, mdlyPriceOracle), 
                new org.web3j.abi.datatypes.Address(160, mdlyMarket), 
                new org.web3j.abi.datatypes.Address(160, timeProvider)));
        return deployRemoteCall(MedleyDAO.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<MedleyDAO> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String mdlyToken, String eauToken, String mdlyPriceOracle, String mdlyMarket, String timeProvider) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, mdlyToken), 
                new org.web3j.abi.datatypes.Address(160, eauToken), 
                new org.web3j.abi.datatypes.Address(160, mdlyPriceOracle), 
                new org.web3j.abi.datatypes.Address(160, mdlyMarket), 
                new org.web3j.abi.datatypes.Address(160, timeProvider)));
        return deployRemoteCall(MedleyDAO.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class VaultCreationEventResponse extends BaseEventResponse {
        public String vault;

        public String owner;
    }
}
