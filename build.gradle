plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
}

group 'medley'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'

    compile group: 'org.web3j', name: 'core', version: '5.0.0'

    compile group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.0.4'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.6.2")

    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.14.3'
    testCompile group: 'org.testcontainers', name: 'junit-jupiter', version: '1.14.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

task buildEthereumContracts(type: Exec) {
    description = 'Build Ethereum contracts'

    String contract_path = projectDir.toString().concat("/src/main/solidity")
    String bin_path = buildDir.toString().concat("/solidity")
    file(bin_path).mkdirs()

    doLast {
        logger.info(standardOutput.toString())
        logger.error(errorOutput.toString())
    }

    commandLine 'sh', '-c', 'find . -type f -name "*.sol" \
        -exec solc {} --allow-paths <contract_path> --bin --abi --optimize -o <bin_path> --overwrite ";"'
            .replace("<contract_path>", contract_path)
            .replace("<bin_path>", bin_path)
}

task generateEthereumContractsBindings(type: Exec) {
    description = 'Generate Java bindings for Ethereum contracts'

    String generated_path = projectDir.toString().concat("/src/main/java/")
    file(generated_path).mkdirs()

    String bin_path = buildDir.toString().concat("/solidity")
    String wildcard = "<bin_path>/*.bin".replace("<bin_path>", bin_path)
    String cmd = 'for f in ' + wildcard + '; ' +
            'do \n' +
            'name=$(echo "$f" | cut -f 1 -d \'.\'); \n' +
            // ignore interfaces with empty .abi content '[]'
            'if [ $(cat ${name}.abi) != "[]" ]; then \n' +
            'web3j solidity generate --binFile ${name}.bin --abiFile=${name}.abi -o <generated_path> -p contract \n'
                    .replace("<bin_path>", bin_path)
                    .replace("<generated_path>", generated_path) +
            'fi \n' +
            'done \n'
    commandLine 'bash', '-c', cmd
}
generateEthereumContractsBindings.dependsOn ':buildEthereumContracts'
